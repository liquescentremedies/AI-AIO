# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-amd64:
    machine:
      image: 'ubuntu-2004:current'
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Build and push Docker image (amd64)"
          command: |-
            IMAGE_NAME=${DOCKER_USER}/${CONTAINER_NAME}
            VERSION_TAG=${CIRCLE_BRANCH}-`cat version`-amd64
            docker buildx build --build-arg VERSION=${VERSION_TAG} \
              --build-arg "ARCH=${VERSION_TAG##*-}/" \
              -t $IMAGE_NAME:$VERSION_TAG -f Dockerfile .
            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
            docker push $IMAGE_NAME:$VERSION_TAG
  build-arm64:
    machine:
      image: 'ubuntu-2004:current'
    resource_class: arm.medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Build and push Docker image (arm64)"
          command: |-
            IMAGE_NAME=${DOCKER_USER}/${CONTAINER_NAME}
            VERSION_TAG=${CIRCLE_BRANCH}-`cat version`-arm64
            docker buildx build --build-arg VERSION=${VERSION_TAG} \
              --build-arg "ARCH=${VERSION_TAG##*-}/" \
              -t $IMAGE_NAME:$VERSION_TAG -f Dockerfile.aarch64 .
            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
            docker push $IMAGE_NAME:$VERSION_TAG

  create-manifest:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: "Create and Push Docker Manifest"
          command: |-
            IMAGE_NAME=${DOCKER_USER}/${CONTAINER_NAME}
            VERSION_TAG=${CIRCLE_BRANCH}-`cat version`
            docker manifest create "${IMAGE_NAME}:${VERSION_TAG}" \
              --amend "${IMAGE_NAME}:${VERSION_TAG}-amd64" \
              --amend "${IMAGE_NAME}:${VERSION_TAG}-arm64"
            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
            docker manifest push "${IMAGE_NAME}:${VERSION_TAG}"
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run: 
                name: "Create and Push Docker Manifest (latest)"
                command: |-
                  IMAGE_NAME=${DOCKER_USER}/${CONTAINER_NAME}
                  docker manifest create "${IMAGE_NAME}:latest" \
                    --amend "${IMAGE_NAME}:${VERSION_TAG}-amd64" \
                    --amend "${IMAGE_NAME}:${VERSION_TAG}-arm64"
                  docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
                  docker manifest push "${IMAGE_NAME}:latest"

workflows:
  build:
    jobs:
      - build-amd64
      - build-arm64
      - create-manifest:
          requires:
            - build-amd64
            - build-arm64